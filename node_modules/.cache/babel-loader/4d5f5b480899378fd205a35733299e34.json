{"ast":null,"code":"var _jsxFileName = \"E:\\\\materialesXC\\\\demo_banners\\\\banners\\\\src\\\\lazy-image.js\";\nimport React from \"react\";\nimport LazyLoad from \"vanilla-lazyload\";\nimport lazyloadConfig from \"./config/lazyload\"; // Only initialize it one time for the entire application\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (!document.lazyLoadInstance) {\n  document.lazyLoadInstance = new LazyLoad(lazyloadConfig);\n}\n\nexport class LazyImage extends React.Component {\n  // Update lazyLoad after first rendering of every image\n  componentDidMount() {\n    document.lazyLoadInstance.update();\n  } // Update lazyLoad after rerendering of every image\n\n\n  componentDidUpdate() {\n    document.lazyLoadInstance.update();\n  } // Just render the image with data-src\n\n\n  render() {\n    const {\n      alt,\n      src,\n      srcset,\n      sizes,\n      width,\n      height\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: alt,\n      className: \"LazyImage\",\n      \"data-src\": src,\n      \"data-srcset\": srcset,\n      \"data-sizes\": sizes,\n      width: width,\n      height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default LazyImage;","map":{"version":3,"sources":["E:/materialesXC/demo_banners/banners/src/lazy-image.js"],"names":["React","LazyLoad","lazyloadConfig","document","lazyLoadInstance","LazyImage","Component","componentDidMount","update","componentDidUpdate","render","alt","src","srcset","sizes","width","height","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,mBAA3B,C,CAEA;;;;AACA,IAAI,CAACC,QAAQ,CAACC,gBAAd,EAAgC;AAC9BD,EAAAA,QAAQ,CAACC,gBAAT,GAA4B,IAAIH,QAAJ,CAAaC,cAAb,CAA5B;AACD;;AAED,OAAO,MAAMG,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AAC7C;AACAC,EAAAA,iBAAiB,GAAG;AAClBJ,IAAAA,QAAQ,CAACC,gBAAT,CAA0BI,MAA1B;AACD,GAJ4C,CAM7C;;;AACAC,EAAAA,kBAAkB,GAAG;AACnBN,IAAAA,QAAQ,CAACC,gBAAT,CAA0BI,MAA1B;AACD,GAT4C,CAW7C;;;AACAE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,GAAP;AAAYC,MAAAA,MAAZ;AAAoBC,MAAAA,KAApB;AAA2BC,MAAAA,KAA3B;AAAkCC,MAAAA;AAAlC,QAA6C,KAAKC,KAAxD;AACA,wBACE;AACE,MAAA,GAAG,EAAEN,GADP;AAEE,MAAA,SAAS,EAAC,WAFZ;AAGE,kBAAUC,GAHZ;AAIE,qBAAaC,MAJf;AAKE,oBAAYC,KALd;AAME,MAAA,KAAK,EAAEC,KANT;AAOE,MAAA,MAAM,EAAEC;AAPV;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAzB4C;AA4B/C,eAAeX,SAAf","sourcesContent":["import React from \"react\";\r\nimport LazyLoad from \"vanilla-lazyload\";\r\nimport lazyloadConfig from \"./config/lazyload\";\r\n\r\n// Only initialize it one time for the entire application\r\nif (!document.lazyLoadInstance) {\r\n  document.lazyLoadInstance = new LazyLoad(lazyloadConfig);\r\n}\r\n\r\nexport class LazyImage extends React.Component {\r\n  // Update lazyLoad after first rendering of every image\r\n  componentDidMount() {\r\n    document.lazyLoadInstance.update();\r\n  }\r\n\r\n  // Update lazyLoad after rerendering of every image\r\n  componentDidUpdate() {\r\n    document.lazyLoadInstance.update();\r\n  }\r\n\r\n  // Just render the image with data-src\r\n  render() {\r\n    const { alt, src, srcset, sizes, width, height } = this.props;\r\n    return (\r\n      <img\r\n        alt={alt}\r\n        className=\"LazyImage\"\r\n        data-src={src}\r\n        data-srcset={srcset}\r\n        data-sizes={sizes}\r\n        width={width}\r\n        height={height}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default LazyImage;"]},"metadata":{},"sourceType":"module"}